name: Build

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']
  schedule:
  - cron: "0 0 * * 5"

jobs:
  PHPUnit:

    strategy:
      fail-fast: false
      matrix:
        php_versions: ['7.1', '7.2', '7.3', '7.4']
        node_versions: ['10'] # ['10', '11', '12', '14'] 
        os: [ubuntu-latest] # [ubuntu-latest, windows-latest]
        database: ['mysql', 'sqlite']

    runs-on: ${{ matrix.os }}
    name: Build - PHP ${{ matrix.php_versions }} - Node ${{ matrix.node_versions }} - ${{ matrix.os }} - ${{ matrix.database }}

    env:
      TEST_DB: default
      UF_MODE: debug

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php_versions }}
        extensions: mbstring, dom, fileinfo, gd, memcached, redis
        coverage: xdebug
        tools: pecl, composer:v1
    
    - name: Setup Redis-server
      if: ${{ matrix.os == 'ubuntu-latest' }}
      uses: supercharge/redis-github-action@1.1.0
      with:
        redis-version: 6
    
    - name: Setup Memcached
      if: ${{ matrix.os == 'ubuntu-latest' }}
      uses: niden/actions-memcached@v7

    - uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node_versions }}
    
    - name: Shutdown Ubuntu MySQL (SUDO)
      if: ${{ matrix.database == 'mysql' }}
      run: sudo service mysql stop # Shutdown the Default MySQL, "sudo" is necessary, please not remove it
    
    - name: Set up MySQL
      if: ${{ matrix.database == 'mysql' }}
      uses: mirromutth/mysql-action@v1.1
      with:
        mysql database: 'userfrosting'
        mysql user: 'userfrosting'
        mysql password: 'password'
    
    - name: Copy .env
      run: php -r "copy('app/sprinkles.example.json', 'app/sprinkles.json');"
    
    - name: Install Dependencies
      run: composer install --prefer-dist --no-progress --no-suggest
    
    - name: Create Database
      if: ${{ matrix.database == 'sqlite' }}
      run: |
        mkdir -p database
        touch database/database.sqlite
    
    - name: Execute build with MySQL Env
      if: ${{ matrix.database == 'mysql' }}
      env:
        DB_DRIVER: mysql
        DB_HOST: 127.0.0.1
        DB_USER: userfrosting
        DB_PASSWORD: password
        DB_NAME: userfrosting
        DB_PORT: 3306
      run: |
        php bakery debug
        php bakery build-assets
        php bakery migrate
        php bakery test -c --coverage-format=clover
    
    - name: Execute build with SQLite Env
      if: ${{ matrix.database == 'sqlite' }}
      env:
        DB_DRIVER: sqlite
        DB_NAME: database/database.sqlite
      run: |
        php bakery debug
        php bakery build-assets
        php bakery migrate
        php bakery test -c --coverage-format=clover
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./_meta/coverage/coverage.xml
        fail_ci_if_error: true
