name: MySQL Build
on: [push, pull_request]
jobs:
  build:
    name: PHP ${{ matrix.php-versions }} - ${{ matrix.operating-system }}
    runs-on: ${{ matrix.operating-system }}

    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest] #, windows-latest, macOS-latest
        php-versions: ['7.1', '7.2', '7.3', '7.4']

    env:
      DB_DRIVER: mysql
      DB_HOST: 127.0.0.1
      DB_USER: userfrosting
      DB_PASSWORD: password
      DB_NAME: userfrosting
      DB_PORT: 3306
      TEST_DB: default
      UF_MODE: debug

    services:
      redis:
        image: redis
        ports:
          - 6379/tcp
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo, gd
          coverage: xdebug #optional
          tools: pecl, composer:v1

      - name: Shutdown Ubuntu MySQL (SUDO)
        run: sudo service mysql stop # Shutdown the Default MySQL, "sudo" is necessary, please not remove it

      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: 'userfrosting'
          mysql user: 'userfrosting'
          mysql password: 'password'

      - name: Copy sprinkles.json
        run: php -r "copy('app/sprinkles.example.json', 'app/sprinkles.json');"

      # - name: Cache Composer packages
      #   id: composer-cache
      #   uses: actions/cache@v2
      #   with:
      #     path: vendor
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/composer.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-

      - name: Install dependencies
        # if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run Bakery Debug
        run: php bakery debug

      - name: Build Assets
        run: php bakery build-assets

      - name: Run Migrations
        run: php bakery migrate

      - name: Test with phpunit
        run: app/vendor/bin/phpunit --coverage-clover=coverage.xml

      # - name: Codecov
      #   uses: codecov/codecov-action@v1.0.5
      #   with:
      #       token: ${{ secrets.CODECOV_TOKEN }} #required
