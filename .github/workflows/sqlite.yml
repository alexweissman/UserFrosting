name: Sqlite Build
on: [push, pull_request]
jobs:
  build:
    name: PHP ${{ matrix.php-versions }} - ${{ matrix.operating-system }}
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest, windows-latest] #, macOS-latest
        php-versions: ['7.1', '7.2', '7.3', '7.4']
    env:
      DB_DRIVER: sqlite
      DB_HOST: 127.0.0.1
      DB_NAME: userfrosting.db
      TEST_DB: default
      UF_MODE: debug
    services:
      redis:
        image: redis
        ports:
          - 6379/tcp
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v1 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo
          coverage: xdebug #optional
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Copy sprinkles.json
        run: php -r "copy('app/sprinkles.example.json', 'app/sprinkles.json');"
      - name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
      - name: Create Database
        run: touch userfrosting.db
      - name: Run Bakery Debug
        run: php bakery debug
      - name: Build Assets
        run: php bakery build-assets
      - name: Run Migrations
        run: php bakery migrate
      - name: Test with phpunit
        run: app/vendor/bin/phpunit --coverage-clover=coverage.xml
      # - name: Codecov
      #   uses: codecov/codecov-action@v1.0.5
      #   with:
      #       token: ${{ secrets.CODECOV_TOKEN }} #required
